package okx

import "errors"

// ErrorCodes and their corresponding error messages
var (
	ErrorCodes = map[string]error{
		"60001": errors.New("\"OK_ACCESS_KEY\" can not be empty."),
		"60002": errors.New("\"OK_ACCESS_SIGN\" can not be empty."),
		"60003": errors.New("\"OK_ACCESS_PASSPHRASE\" can not be empty."),
		"60004": errors.New("Invalid OK_ACCESS_TIMESTAMP."),
		"60005": errors.New("Invalid OK_ACCESS_KEY."),
		"60006": errors.New("Timestamp request expired."),
		"60007": errors.New("Invalid sign."),
		"60008": errors.New("Public WebSocket services do not support subscribing to private channels"),
		"60009": errors.New("Login failed."),
		"60011": errors.New("Please log in."),
		"60012": errors.New("Illegal request."),
		"60013": errors.New("Invalid args."),
		"60014": errors.New("Requests too frequent."),
		"60015": errors.New("Connection closed as there was no data transmission in the last 30 seconds."),
		"60016": errors.New("Buffer is full, cannot write data."),
		"60017": errors.New("Invalid url path."),
		"60018": errors.New("The {0} {1} {2} {3} {4} does not exist."),
		"60019": errors.New("Invalid op {op}"),
		"60020": errors.New("APIKey subscription amount exceeds the limit {0}"),
		"60021": errors.New("This operation does not support multiple accounts login"),
		"60022": errors.New("Bulk login partially succeeded"),
		"60023": errors.New("Bulk login requests too frequent"),
		"60024": errors.New("Wrong passphrase"),
		"60025": errors.New("token subscription amount exceeds the limit {0}"),
		"60026": errors.New("Batch login by APIKey and token simultaneously is not supported."),
		"60027": errors.New("Parameter {0} can not be empty."),
		"60028": errors.New("Private WebSocket services do not support subscribing to public channels"),
		"60029": errors.New("Only users who're VIP5 and above can subscribe to books-l2-tbt order book channels"),
		"60030": errors.New("Only users who're VIP4 and above can subscribe to books50-l2-tbt order book channels"),
		"63999": errors.New("Internal system error."),
		"70000": errors.New("RFQ does not exist."),
		"70001": errors.New("Quote does not exist."),
		"70002": errors.New("Block trade does not exist."),
		"70003": errors.New("Public block trade does not exist."),
		"70004": errors.New("Invalid instrument {0}"),
		"70005": errors.New("The number of legs in RFQ cannot exceed maximum value."),
		"70006": errors.New("Does not meet the minimum asset requirement."),
		"70007": errors.New("Underlying index {0} does not exist under instType {1}."),
		"70008": errors.New("Operation failed under MMP status, the frozen window is {0} seconds."),
		"70009": errors.New("Data must have at least 1 valid element."),
		"70011": errors.New("Duplicate setting for instType {0}."),
		"70100": errors.New("Duplicate instruments in legs array."),
		"70101": errors.New("Duplicate clRfqId"),
		"70102": errors.New("No counterparties specified"),
		"70103": errors.New("Invalid counterparty"),
		"70105": errors.New("The total value should be greater than the min notional value {0}."),
		"70106": errors.New("The trading amount does not meet the min tradable amount requirement"),
		"70107": errors.New("The number of counterparties cannot exceed maximum value."),
		"70109": errors.New("Counterparties for selected instruments are currently unavailable."),
		"70200": errors.New("The RFQ with {0} status cannot be canceled"),
		"70203": errors.New("Cancellation failed as rfq count exceeds the limit {0}."),
		"70207": errors.New("Cancellation failed as you do not have any active RFQs."),
		"70208": errors.New("Cancellation failed as service is unavailable now, please try again later."),
		"70301": errors.New("Duplicate clQuoteId."),
		"70303": errors.New("The RFQ with {0} status cannot be quoted."),
		"70304": errors.New("Price should be an integer multiple of the tick size."),
		"70305": errors.New("Bid price cannot be higher than offer price"),
		"70306": errors.New("The legs of quote do not match the legs of {0}"),
		"70307": errors.New("Size should be in integral multiples of the lot size."),
		"70308": errors.New("Quote to your own RFQ is not allowed."),
		"70309": errors.New("Quote to the same RFQ with the same side is not allowed."),
		"70310": errors.New("Quoted price of instId {0} cannot exceed your preset price limit."),
		"70400": errors.New("The Quote with {0} status cannot be canceled"),
		"70408": errors.New("Cancellation failed as quote count exceeds the limit {0}."),
		"70409": errors.New("Cancellation failed as you do not have any active Quotes."),
		"70501": errors.New("RFQ {0} is not quoted by {1}"),
		"70502": errors.New("The legs do not match the legs of {0}"),
		"70503": errors.New("The legs of execution do not match the legs of {0}"),
		"70504": errors.New("Execution failed as the RFQ status is {0}."),
		"70505": errors.New("Execution failed as the Quote status is {0}."),
		"70511": errors.New("Execution is being processed"),
		"56000": errors.New("Block trade does not exist."),
		"56001": errors.New("The number of multi-legs cannot exceed {0}."),
		"56002": errors.New("The number of multi-legs does not match with the verified one."),
		"56003": errors.New("Duplicated clBlockTdId."),
		"56004": errors.New("Trade with yourself is not allowed."),
		"56005": errors.New("clBlockTdId should be the same as the verified one."),
		"56006": errors.New("The role should be different from the verified one."),
		"56007": errors.New("Leg no.{0} does not match with the verified one."),
		"56008": errors.New("Duplicate instruments in legs array."),
		"59000": errors.New("Your settings failed as you have positions or open orders."),
		"59001": errors.New("Switching unavailable as you have borrowings."),
		"59004": errors.New("Only IDs with the same instrument type are supported"),
		"59005": errors.New("When users transfer the margin by themselves in isolated mode, the value of the asset allocated to the position for the first time must be greater than 10,000 USDT"),
		"59100": errors.New("You have open positions. Please cancel all open positions before changing the leverage."),
		"59101": errors.New("You have pending orders with isolated positions. Please cancel all the pending isolated margin orders and adjust the leverage."),
		"59102": errors.New("Leverage exceeds the maximum leverage. Please adjust the leverage."),
		"59103": errors.New("Leverage is too low and no sufficient margin in your account. Please adjust the leverage."),
		"59104": errors.New("The leverage is too high. The borrowed position has exceeded the maximum position of this leverage. Please adjust the leverage."),
		"59105": errors.New("Leverage can not be less than {0}. Please adjust the leverage."),
		"59106": errors.New("The max available margin corresponding to your order tier Please adjust your margin and place a new order."),
		"59107": errors.New("You have pending cross margin orders under the service, please modify the leverage after canceling all pending cross margin orders."),
		"59108": errors.New("Low leverage and insufficient margin, please adjust the leverage."),
		"59109": errors.New("Account equity less than the required margin amount after adjustment. Please adjust the leverage ."),
		"59110": errors.New("The instrument type corresponding to this {0} does not support the tgtCcy parameter."),
		"59111": errors.New("You cannot query the leverage of cross derivatives positions under a PM account."),
		"59112": errors.New("You have isolated/cross pending orders. Please cancel them before adjusting your leverage"),
		"59200": errors.New("Insufficient account balance."),
		"59201": errors.New("Negative account balance."),
		"59300": errors.New("Margin call failed. Position does not exist."),
		"59301": errors.New("Margin adjustment failed for exceeding the max limit."),
		"59302": errors.New("You have pending close orders, please modify the margin after canceling the orders."),
		"59303": errors.New("Insufficient available margin, add margin or reduce the borrowing amount"),
		"59304": errors.New("Insufficient equity for borrowing, keep enough funds to pay interest for at least one day"),
		"59305": errors.New("Use VIP loan first to set the VIP loan priority"),
		"59306": errors.New("Your borrowing amount exceeds the max limit"),
		"59307": errors.New("You are not eligible for VIP loans"),
		"59308": errors.New("Unable to repay VIP loan due to insufficient borrow limit"),
		"59309": errors.New("Unable to repay an amount that exceeds the borrowed amount"),
		"59310": errors.New("Your account does not support VIP loan"),
		"59311": errors.New("Unable to set up as there is VIP loan"),
		"59312": errors.New("{currency} does not support VIP loans"),
		"59401": errors.New("Holdings already reached the limit."),
		"59402": errors.New("None of the passed instId is in live state, please check them separately."),
		"59500": errors.New("Only the APIKey of the main account has permission."),
		"59501": errors.New("Only 50 APIKeys can be created per account."),
		"59502": errors.New("Note name cannot be duplicate with the currently created APIKey note name."),
		"59503": errors.New("Each APIKey can bind up to 20 IP addresses."),
		"59504": errors.New("The sub account does not support the withdrawal function."),
		"59505": errors.New("The passphrase format is incorrect."),
		"59506": errors.New("APIKey does not exist."),
		"59507": errors.New("The two accounts involved in a transfer must be two different sub accounts under the same parent account."),
		"59508": errors.New("The sub account of {0} is suspended."),
		"59509": errors.New("Account does not have permission to reset MMP status"),
		"59510": errors.New("Sub-account does not exist"),
		"59512": errors.New("Unable to set up this permission for ND brokers sub accounts. By default, all ND sub accounts can transfer funds out."),
		"59601": errors.New("This sub-account name already exists, try another name"),
		"59602": errors.New("Number of API keys exceeds the limit"),
		"59603": errors.New("Number of sub accounts exceeds the limit"),
		"59604": errors.New("Only the main account APIkey can access this API"),
		"59605": errors.New("This API key does not exist in your sub-account, try another API key"),
		"59606": errors.New("Transfer funds to your main account before deleting your sub-account"),
		"59608": errors.New("Only the Broker account has permission to operate this API"),
		"59609": errors.New("Broker already exists"),
		"59610": errors.New("Broker does not exist"),
		"59611": errors.New("Broker unverified"),
		"59612": errors.New("Cannot convert time format"),
		"59613": errors.New("There is currently no escrow relationship established with the sub account"),
		"59614": errors.New("Managed sub account do not support this operation"),
		"59615": errors.New("The time interval between the begin date and end date cannot exceed 180 days."),
		"59616": errors.New("Begin date cannot be greater than end date."),
		"59617": errors.New("Sub-account created. Failed to set up account level."),
		"59618": errors.New("Failed to create sub-account."),
		"58000": errors.New("Account type {0} does not supported when getting the sub-account balance."),
		"58001": errors.New("Incorrect trade password."),
		"58002": errors.New("Please activate Savings Account first."),
		"58003": errors.New("Currency type is not supported by Savings Account."),
		"58004": errors.New("Account blocked (transfer & withdrawal endpoint: either end of the account does not authorize the transfer)."),
		"58005": errors.New("The purchase/redeemed amount must be no greater than {0}."),
		"58006": errors.New("Service unavailable for token {0}."),
		"58007": errors.New("Abnormal Assets interface. Please try again later."),
		"58008": errors.New("You do not have assets in this currency."),
		"58009": errors.New("Currency pair do not exist."),
		"58010": errors.New("The chain {0} is not supported."),
		"58011": errors.New("Sorry, we are unable to provide services to unverified users in {Region} due to local laws and regulations. Please verify your account in order to use the services."),
		"58012": errors.New("Sorry, you can't transfer assets to this recipient as OKX are unable to provide services to unverified users in {region} due to local laws and regulations."),
		"58100": errors.New("The trading product triggers risk control, and the platform has suspended the fund transfer-out function with related users. Please wait patiently."),
		"58101": errors.New("Transfer suspended (transfer endpoint: either end of the account does not authorize the transfer)."),
		"58102": errors.New("Too frequent transfer (transfer too frequently)."),
		"58104": errors.New("Since your P2P transaction is abnormal, you are restricted from making fund transfers. Please contact customer support to remove the restriction."),
		"58105": errors.New(`Since your P2P transaction is abnormal, you are restricted from making fund transfers. Please transfer funds on our website or app to complete identity verification.`),
		"58106": errors.New("Please enable the account for spot contract."),
		"58107": errors.New("Please enable the account for futures contract."),
		"58108": errors.New("Please enable the account for option contract."),
		"58109": errors.New("Please enable the account for swap contract."),
		"58110": errors.New("The contract triggers risk control, and the platform has suspended the fund transfer function of it. Please wait patiently."),
		"58111": errors.New("Funds transfer unavailable as the perpetual contract is charging the funding fee. Please try again later."),
		"58112": errors.New("Your fund transfer failed. Please try again later."),
		"58114": errors.New("Transfer amount must be more than 0."),
		"58115": errors.New("Sub-account does not exist."),
		"58116": errors.New("Transfer amount exceeds the limit."),
		"58117": errors.New("Account assets are abnormal, please deal with negative assets before transferring."),
		"58119": errors.New("{0} Sub-account has no permission to transfer out, please set first."),
		"58120": errors.New("The transfer service is temporarily unavailable, please try again later."),
		"58121": errors.New("This transfer will result in a high-risk level of your position, which may lead to forced liquidation. You need to re-adjust the transfer amount to make sure the position is at a safe level before proceeding with the transfer."),
		"58122": errors.New("A portion of your spot is being used for Delta offset between positions. If the transfer amount exceeds the available amount, it may affect current spot-derivatives risk offset structure, which will result in an increased Maintenance Margin Requirement (MMR) rate. Please be aware of your risk level."),
		"58123": errors.New("Parameter from can not equal to parameter to."),
		"58200": errors.New("Withdrawal from {0} to {1} is unavailable for this currency."),
		"58201": errors.New("Withdrawal amount exceeds the daily limit."),
		"58202": errors.New("The minimum withdrawal amount for NEO is 1, and the amount must be an integer."),
		"58203": errors.New("Please add a withdrawal address."),
		"58204": errors.New("Withdrawal suspended."),
		"58205": errors.New("Withdrawal amount exceeds the upper limit."),
		"58206": errors.New("Withdrawal amount is lower than the lower limit."),
		"58207": errors.New("Withdrawal address is not in the verification-free whitelist."),
		"58208": errors.New("Withdrawal failed. Please link your email."),
		"58209": errors.New("Sub-accounts cannot be deposits or withdrawals"),
		"58210": errors.New("Withdrawal fee exceeds the upper limit."),
		"58211": errors.New("Withdrawal fee is lower than the lower limit (withdrawal endpoint: incorrect fee)."),
		"58212": errors.New("Withdrawal fee should be {0}% of the withdrawal amount."),
		"58214": errors.New("Withdrawals suspended due to {chainName} maintenance"),
		"58215": errors.New("Withdrawal ID does not exist."),
		"58216": errors.New("Operation not allowed."),
		"58217": errors.New("You cannot withdraw your asset at the moment due to a risk detected in your withdrawal address, contact customer support for details."),
		"58218": errors.New("Your saved withdrawal account has expired."),
		"58220": errors.New("The withdrawal order is already canceled."),
		"58221": errors.New("Missing label of withdrawal address."),
		"58222": errors.New("Illegal withdrawal address."),
		"58224": errors.New("This type of crypto does not support on-chain withdrawing to OKX addresses. Please withdraw through internal transfers."),
		"58225": errors.New("Sorry, you can't transfer assets to this recipient as OKX are unable to provide services to unverified users in {region} due to local laws and regulations."),
		"58300": errors.New("Deposit-address count exceeds the limit."),
		"58301": errors.New("Deposit-address not exist."),
		"58302": errors.New("Deposit-address needs tag."),
		"58303": errors.New("Deposit for the chain {0} is closed now."),
		"58304": errors.New("Failed to create invoice."),
		"58350": errors.New("Insufficient balance."),
		"58351": errors.New("Invoice expired."),
		"58352": errors.New("Invalid invoice."),
		"58353": errors.New("Deposit amount must be within limits."),
		"58354": errors.New("You have reached the limit of 10000 invoices per day."),
		"58355": errors.New("Permission denied. Please contact your account manager."),
		"58356": errors.New("The accounts of the same node do not support the Lightning network deposit or withdrawal."),
		"58357": errors.New("{0} is not allowed to create a deposit address"),
		"58358": errors.New("fromCcy should not be the same as toCcy"),
		"58370": errors.New("The daily usage of small assets convert exceeds the limit."),
		"58371": errors.New("Small assets exceed the maximum limit."),
		"58372": errors.New("Insufficient small assets."),
		"55000": errors.New("Cannot be transferred out within 30 minutes after delivery."),
		"54000": errors.New("Margin transactions unavailable."),
		"54001": errors.New("Only Multi-currency margin account can be set to borrow coins automatically."),
		"52900": errors.New("General Invalid request"),
		"52901": errors.New("Invalid base asset"),
		"52902": errors.New("Invalid quote asset"),
		"52903": errors.New("Invalid quote amount"),
		"52904": errors.New("Invalid quote side"),
		"52905": errors.New("Invalid quote price"),
		"52907": errors.New("Order not found"),
		"52908": errors.New("Invalid order ID"),
		"52909": errors.New("Duplicated Client Order Id"),
		"52910": errors.New("Service unavailable, please try again later"),
		"52911": errors.New("RFQ service unavailable, please try again later"),
		"52912": errors.New("Server timeout"),
		"52913": errors.New("Trade rejected"),
		"52915": errors.New("Cannot quote due to large amounts of RFQ and insufficient liquidity, please try again later"),
		"52916": errors.New("Insufficient balance in funding account"),
		"52917": errors.New("RFQ quantity cannot be less than the lower limit"),
		"52918": errors.New("Insufficient balance in funding account"),
		"52919": errors.New("Parameter {param} of convert trading is inconsistent with the quotation"),
		"52920": errors.New("Quantity of convert trading cannot exceed the quotation quantity"),
		"52921": errors.New("Quote traded, please ask for quote again"),
		"52922": errors.New("Quote expired, please ask for quote again"),
		"52923": errors.New("Service unavailable, please try again later"),
		"51720": errors.New("Redeem error"),
		"51721": errors.New("Cancel redeem error"),
		"51722": errors.New("Redeem already complete"),
		"51723": errors.New("Early redemption is not supported"),
		"51724": errors.New("Redemption is currently not supported"),
		"51725": errors.New("Cancellation is currently not supported"),
		"51726": errors.New("Cancellation of subscriptions/redemptions is not supported"),
		"51727": errors.New("The subscription quantity is below the minimum requirement"),
		"51728": errors.New("The subscription quantity is above the maximum limit"),
		"51729": errors.New("This project has not reached the redemption date"),
		"51730": errors.New("Sold out"),
		"52000": errors.New("No market data found."),
		"51000": errors.New("Parameter {0} error."),
		"51001": errors.New("Instrument ID does not exist."),
		"51002": errors.New("Instrument ID does not match underlying index."),
		"51003": errors.New("Either client order ID or order ID is required."),
		"51004": errors.New("Order amount exceeds current tier limit, please lower the leverage."),
		"51005": errors.New("Order amount exceeds the limit."),
		"51006": errors.New("Order price is not within the price limit (max buy price: {0} min sell price: {1})"),
		"51007": errors.New("Order placement failed. Order amount should be at least 1 contract (showing up when placing an order with less than 1 contract)."),
		"51008": errors.New("Delegate failed. Insufficient {0} balance in account"),
		"51009": errors.New("Order placement function is blocked by the platform."),
		"51010": errors.New("Operation is not supported under the current account mode."),
		"51011": errors.New("Duplicated order ID."),
		"51012": errors.New("Token does not exist."),
		"51014": errors.New("Index does not exist."),
		"51015": errors.New("Instrument ID does not match instrument type."),
		"51016": errors.New("Duplicated client order ID."),
		"51017": errors.New("Borrow amount exceeds the limit."),
		"51018": errors.New("User with option account can not hold net short positions."),
		"51019": errors.New("No net long positions can be held under cross margin mode in options."),
		"51020": errors.New("Order amount should be greater than the min available amount."),
		"51021": errors.New("Contract to be listed."),
		"51022": errors.New("Contract suspended."),
		"51023": errors.New("Position does not exist."),
		"51024": errors.New("Trading account is blocked."),
		"51025": errors.New("Order count exceeds the limit."),
		"51026": errors.New("Instrument type does not match underlying index."),
		"51027": errors.New("Contract expired."),
		"51028": errors.New("Contract under delivery."),
		"51029": errors.New("Contract is being settled."),
		"51030": errors.New("Funding fee is being settled."),
		"51031": errors.New("This order price is not within the closing price range."),
		"51032": errors.New("Closing all positions at market price."),
		"51033": errors.New("The total amount per order for this pair has reached the upper limit."),
		"51037": errors.New("The current account risk status only supports you to place IOC orders that can reduce the risk of your account."),
		"51038": errors.New("There is already an IOC order under the current risk module that reduces the risk of the account."),
		"51039": errors.New("Leverage cannot be adjusted for the cross positions of Futures and Perpetual swap under the PM account."),
		"51040": errors.New("Cannot adjust margins for long isolated options positions"),
		"51041": errors.New("Portfolio margin account only supports net mode."),
		"51044": errors.New("The order type {0}, {1} is not allowed to set stop loss and take profit"),
		"51046": errors.New("The take profit trigger price should be higher than the order price"),
		"51047": errors.New("The stop loss trigger price should be lower than the order price"),
		"51048": errors.New("The take profit trigger price should be lower than the order price"),
		"51049": errors.New("The stop loss trigger price should be higher than the order price"),
		"51050": errors.New("The take profit trigger price should be higher than the best ask price"),
		"51051": errors.New("The stop loss trigger price should be lower than the best ask price"),
		"51052": errors.New("The take profit trigger price should be lower than the best bid price"),
		"51053": errors.New("The stop loss trigger price should be higher than the best bid price"),
		"51054": errors.New("Getting information timed out, please try again later"),
		"51055": errors.New("Futures Grid is not available in Portfolio Margin mode"),
		"51056": errors.New("Action not allowed"),
		"51057": errors.New("Futures Grid is not available in Simple trading mode"),
		"51058": errors.New("No position"),
		"51059": errors.New("Strategy for the current state does not support this operation"),
		"51101": errors.New("entered amount exceeds the max pending order amount (Cont) per transaction."),
		"51102": errors.New("entered amount exceeds the max pending count."),
		"51103": errors.New("entered amount exceeds the max pending order count of the underlying asset."),
		"51104": errors.New("entered amount exceeds the max pending order amount (Cont) of the underlying asset."),
		"51105": errors.New("entered amount exceeds the max order amount (Cont) of the contract."),
		"51106": errors.New("entered amount exceeds the max order amount (Cont) of the underlying asset."),
		"51107": errors.New("entered amount exceeds the max holding amount (Cont)."),
		"51108": errors.New("positions exceed the limit for closing out with the market price."),
		"51109": errors.New("no available offer."),
		"51110": errors.New("you can only place a limit order after Call Auction has started."),
		"51111": errors.New("maximum {0} orders can be placed in bulk."),
		"51112": errors.New("close order size exceeds your available size."),
		"51113": errors.New("market-price liquidation requests too frequent."),
		"51115": errors.New("cancel all pending close-orders before liquidation."),
		"51116": errors.New("order price or trigger price exceeds {0}."),
		"51117": errors.New("Pending close-orders count exceeds limit."),
		"51120": errors.New("Order quantity is less than {0}, please try again."),
		"51121": errors.New("Order count should be the integer multiples of the lot size."),
		"51122": errors.New("Order price should be higher than the min price {0}."),
		"51124": errors.New("You can only place limit orders during call auction."),
		"51125": errors.New("Currently there are reduce + reverse position pending orders in margin trading. Please cancel all reduce + reverse position pending orders and continue."),
		"51126": errors.New("Currently there are reduce only pending orders in margin trading. Please cancel all reduce only pending orders and continue."),
		"51127": errors.New("Available balance is 0."),
		"51128": errors.New("Multi-currency margin account can not do cross-margin trading."),
		"51129": errors.New("The value of the position and buy order has reached the position limit, and no further buying is allowed."),
		"51130": errors.New("Fixed margin currency error."),
		"51131": errors.New("Insufficient balance."),
		"51132": errors.New("Your position amount is negative and less than the minimum trading amount."),
		"51133": errors.New("Reduce-only feature is unavailable for the spot transactions by multi-currency margin account."),
		"51134": errors.New("Closing failed. Please check your holdings and pending orders."),
		"51135": errors.New("Your closing price has triggered the limit price, and the max buy price is {0}."),
		"51136": errors.New("Your closing price has triggered the limit price, and the min sell price is {0}."),
		"51137": errors.New("Your opening price has triggered the limit price, and the max buy price is {0}."),
		"51138": errors.New("Your opening price has triggered the limit price, and the min sell price is {0}."),
		"51139": errors.New("Reduce-only feature is unavailable for the spot transactions by simple account."),
		"51145": errors.New("When users transfer the margin by themselves in isolated mode, it’s not supported to place orders in advance"),
		"51147": errors.New("The total value of assets in your Trading account needs to be greater than 50,000 USD to trade options"),
		"51148": errors.New("ReduceOnly cannot increase the position quantity."),
		"51149": errors.New("Order timed out, please try again later."),
		"51150": errors.New("The precision of the number of trades or the price exceeds the limit."),
		"51201": errors.New("Value of per market order cannot exceed 1,000,000 USDT."),
		"51202": errors.New("Market - order amount exceeds the max amount."),
		"51203": errors.New("Order amount exceeds the limit {0}."),
		"51204": errors.New("The price for the limit order can not be empty."),
		"51205": errors.New("Reduce-Only is not available."),
		"51206": errors.New("Please cancel the Reduce Only order before placing the current {0} order to avoid opening a reverse position."),
		"51250": errors.New("Algo order price is out of the available range."),
		"51251": errors.New("Algo order type error (when user place an iceberg order)."),
		"51252": errors.New("Algo order price is out of the available range."),
		"51253": errors.New("Average amount exceeds the limit of per iceberg order."),
		"51254": errors.New("Iceberg average amount error (when user place an iceberg order)."),
		"51255": errors.New("Limit of per iceberg order: Total amount/1000 < x <= Total amount."),
		"51256": errors.New("Iceberg order price variance error."),
		"51257": errors.New("Trail order callback rate error."),
		"51258": errors.New("Trail - order placement failed. The trigger price of a sell order should be higher than the last transaction price."),
		"51259": errors.New("Trail - order placement failed. The trigger price of a buy order should be lower than the last transaction price."),
		"51260": errors.New("Maximum {0} pending trail - orders can be held at the same time."),
		"51261": errors.New("Each user can hold up to {0} pending stop - orders at the same time."),
		"51262": errors.New("Maximum {0} pending iceberg orders can be held at the same time."),
		"51263": errors.New("Maximum {0} pending time-weighted orders can be held at the same time."),
		"51264": errors.New("Average amount exceeds the limit of per time-weighted order."),
		"51265": errors.New("Time-weighted order limit error."),
		"51267": errors.New("Time-weighted order strategy initiative rate error."),
		"51268": errors.New("Time-weighted order strategy initiative range error."),
		"51269": errors.New("Time-weighted order interval error, the interval should be {0}<= x<={1}."),
		"51270": errors.New("The limit of time-weighted order price variance is 0 < x <= 1%."),
		"51271": errors.New("Sweep ratio should be 0 < x <= 100%."),
		"51272": errors.New("Price variance should be 0 < x <= 1%."),
		"51273": errors.New("Total amount should be more than {0}."),
		"51274": errors.New("Total quantity of time-weighted order must be larger than single order limit."),
		"51275": errors.New("The amount of single stop-market order can not exceed the upper limit."),
		"51276": errors.New("Stop - Market orders cannot specify a price."),
		"51277": errors.New("TP trigger price can not be higher than the last price."),
		"51278": errors.New("SL trigger price can not be lower than the last price."),
		"51279": errors.New("TP trigger price can not be lower than the last price."),
		"51280": errors.New("SL trigger price can not be higher than the last price."),
		"51281": errors.New("trigger not support the tgtCcy parameter."),
		"51282": errors.New("The range of Price variance is {0}~{1}"),
		"51283": errors.New("The range of Time interval is {0}~{1}"),
		"51284": errors.New("The range of Average amount is {0}~{1}"),
		"51285": errors.New("The range of Total amount is {0}~{1}"),
		"51286": errors.New("The total amount should not be less than {0}"),
		"51287": errors.New("Contract not supported"),
		"51288": errors.New("We are stopping the Bot. Please do not click it multiple times"),
		"51289": errors.New("Bot configuration does not exist. Please try again later"),
		"51290": errors.New("The Bot engine is being upgraded. Please try again later"),
		"51291": errors.New("This Bot does not exist or has been stopped"),
		"51292": errors.New("This Bot type does not exist"),
		"51293": errors.New("This Bot does not exist"),
		"51294": errors.New("This Bot cannot be created temporarily. Please try again later"),
		"51295": errors.New("Portfolio margin account does not support ordType {0} in Trading bot mode"),
		"51298": errors.New("Trigger orders are not available in the net mode of futures and perpetual swaps"),
		"51299": errors.New("Order did not go through. You can hold maximum {0} orders of this type"),
		"51300": errors.New("TP trigger price can not be higher than the mark price"),
		"51302": errors.New("SL trigger price can not be lower than the mark price"),
		"51303": errors.New("TP trigger price can not be lower than the mark price"),
		"51304": errors.New("SL trigger price can not be higher than the mark price"),
		"51305": errors.New("TP trigger price can not be higher than the index price"),
		"51306": errors.New("SL trigger price can not be lower than the index price"),
		"51307": errors.New("TP trigger price can not be lower than the index price"),
		"51308": errors.New("SL trigger price can not be higher than the index price"),
		"51309": errors.New("Cannot create trading bot during call auction"),
		"51310": errors.New("When users transfer the margin by themselves in isolated mode, strategic orders with ordType iceberg and twap will not be supported"),
		"51311": errors.New("Failed to place trailing stop order. Callback rate should be within {0}<x<={1}"),
		"51312": errors.New("Failed to place trailing stop order. Order amount should be within {0}<x<={1}"),
		"51313": errors.New("Manual transfer in isolated mode does not support bot trading"),
		"51317": errors.New("Trigger orders are not available by margin"),
		"51340": errors.New("Used margin must be greater than {0}{1}"),
		"51341": errors.New("Position closing not allowed"),
		"51342": errors.New("Closing order already exists. Please try again later"),
		"51343": errors.New("TP price must be less than the lower price"),
		"51344": errors.New("SL price must be greater than the upper price"),
		"51345": errors.New("Policy type is not grid policy"),
		"51346": errors.New("The highest price cannot be lower than the lowest price"),
		"51347": errors.New("No profit available"),
		"51348": errors.New("Stop price should be less than the lowest price in the range"),
		"51349": errors.New("Stop profit price should be greater than the highest price in the range"),
		"51350": errors.New("No recommended parameters"),
		"51351": errors.New("Single income must be greater than 0"),
		"51370": errors.New("The range of lever is {0}~{1}"),
		"51400": errors.New("Cancellation failed as the order does not exist."),
		"51401": errors.New("Cancellation failed as the order is already canceled."),
		"51402": errors.New("Cancellation failed as the order is already completed."),
		"51403": errors.New("Cancellation failed as the order type does not support cancellation."),
		"51404": errors.New("Order cancellation unavailable during the second phase of call auction."),
		"51405": errors.New("Cancellation failed as you do not have any pending orders."),
		"51406": errors.New("Canceled - order count exceeds the limit {0}."),
		"51407": errors.New("Either order ID or client order ID is required."),
		"51408": errors.New("Pair ID or name does not match the order info."),
		"51409": errors.New("Either pair ID or pair name ID is required."),
		"51410": errors.New("Cancellation failed as the order is already under cancelling status."),
		"51411": errors.New("Account does not have permission for mass cancellation."),
		"51412": errors.New("The order has been triggered and cannot be cancelled."),
		"51413": errors.New("Cancellation failed as the order type is not supported by endpoint."),
		"51415": errors.New("Unable to place order. Spot trading only supports using the last price as trigger price. Please select \"Last\" and try again."),
		"51500": errors.New("Either order price or amount is required."),
		"51501": errors.New("Maximum {0} orders can be modified."),
		"51502": errors.New("Order modification failed for insufficient margin."),
		"51503": errors.New("Order modification failed as the order does not exist."),
		"51506": errors.New("Order modification unavailable for the order type."),
		"51508": errors.New("Orders are not allowed to be modified during the call auction."),
		"51509": errors.New("Modification failed as the order has been canceled."),
		"51510": errors.New("Modification failed as the order has been completed."),
		"51511": errors.New("Operation failed as the order price did not meet the requirement for Post Only."),
		"51512": errors.New("Failed to amend bulk orders. You cannot add duplicate batch orders in your Portfolio margin account."),
		"51513": errors.New("Number of modification requests that are currently in progress for an order cannot exceed 3."),
		"51600": errors.New("Status not found."),
		"51601": errors.New("Order status and order ID cannot exist at the same time."),
		"51602": errors.New("Either order status or order ID is required."),
		"51603": errors.New("Order does not exist."),
		"51607": errors.New("The file is generating."),
		"50100": errors.New("API frozen, please contact customer service."),
		"50101": errors.New("APIKey does not match current environment."),
		"50102": errors.New("Timestamp request expired."),
		"50103": errors.New("Request header \"OK_ACCESS_KEY\" can not be empty."),
		"50104": errors.New("Request header \"OK_ACCESS_PASSPHRASE\" can not be empty."),
		"50105": errors.New("Request header \"OK_ACCESS_PASSPHRASE\" incorrect."),
		"50106": errors.New("Request header \"OK_ACCESS_SIGN\" can not be empty."),
		"50107": errors.New("Request header \"OK_ACCESS_TIMESTAMP\" can not be empty."),
		"50108": errors.New("Exchange ID does not exist."),
		"50109": errors.New("Exchange domain does not exist."),
		"50110": errors.New("Your IP {0} is not in linking trusted IP addresses.(You can add your IP in linking trusted IP addresses)"),
		"50111": errors.New("Invalid OK_ACCESS_KEY."),
		"50112": errors.New("Invalid OK_ACCESS_TIMESTAMP."),
		"50113": errors.New("Invalid signature."),
		"50114": errors.New("Invalid authorization."),
		"50115": errors.New("Invalid request method."),
		"1":     errors.New("Operation failed."),
		"2":     errors.New("Bulk operation partially succeeded."),
		"50000": errors.New("Body can not be empty."),
		"50001": errors.New("Service temporarily unavailable, please try again later."),
		"50002": errors.New("Json data format error."),
		"50004": errors.New("Endpoint request timeout (does not mean that the request was successful or failed, please check the request result)."),
		"50005": errors.New("API is offline or unavailable."),
		"50006": errors.New("Invalid Content_Type, please use \"application/json\" format."),
		"50007": errors.New("Account blocked."),
		"50008": errors.New("User does not exist."),
		"50009": errors.New("Account is suspended due to ongoing liquidation."),
		"50010": errors.New("User ID can not be empty."),
		"50011": errors.New("Requests too frequent."),
		"50012": errors.New("Account status invalid."),
		"50013": errors.New("System is busy, please try again later."),
		"50014": errors.New("Parameter {0} can not be empty."),
		"50015": errors.New("Either parameter {0} or {1} is required."),
		"50016": errors.New("Parameter {0} does not match parameter {1}."),
		"50017": errors.New("The position is frozen due to ADL. Operation restricted."),
		"50018": errors.New("Currency {0} is frozen due to ADL. Operation restricted."),
		"50019": errors.New("The account is frozen due to ADL. Operation restricted."),
		"50020": errors.New("The position is frozen due to liquidation. Operation restricted."),
		"50021": errors.New("Currency {0} is frozen due to liquidation. Operation restricted."),
		"50022": errors.New("The account is frozen due to liquidation. Operation restricted."),
		"50023": errors.New("Funding fee frozen. Operation restricted."),
		"50024": errors.New("Parameter {0} and {1} can not exist at the same time."),
		"50025": errors.New("Parameter {0} count exceeds the limit {1}."),
		"50026": errors.New("System error, please try again later."),
		"50027": errors.New("The account is restricted from trading."),
		"50028": errors.New("Unable to take the order, please reach out to support center for details."),
		"50029": errors.New(`This instrument ({0}) is unavailable at present due to risk management. Please contact customer service for help.`),
		"50030": errors.New("No permission to use this API"),
		"50031": errors.New("Amount cannot exceed 100"),
		"50032": errors.New("This asset is blocked, allow its trading and try again"),
		"50033": errors.New("This instrument is blocked, allow its trading and try again"),
		"50034": errors.New("You are not currently on the whitelist, please contact customer service"),
		"50035": errors.New("This endpoint requires that APIKey must be bound to IP"),
		"50036": errors.New("Invalid expTime"),
		"50037": errors.New("Order expired"),
		"50038": errors.New("This feature is temporarily unavailable in demo trading"),
		"50039": errors.New("The before parameter is not available for implementing timestamp pagination"),
	}
)
